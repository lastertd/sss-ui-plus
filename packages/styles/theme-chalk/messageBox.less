@import "../mixn/_index";




// message box
& {
    @ns: @{componentPrefix}-message-box;
    @types: success, info, warning, danger;


    //base
    .d(@ns, {
        .useFlexRCC(5);
        align-items: stretch;

        .useBorderDft(3);
        box-shadow: rgba(17, 17, 26, 0.05) 0 4px 16px, rgba(17, 17, 26, 0.05) 0 8px 32px;


        outline: none;
        padding: 10px 10px 15px;
        font-size: var(--sss-font-size-default);
    });

    //icon
    .d(be(@ns, icon), {
        height: 1.55em;
    });
}


//message
& {
    @ns: @{componentPrefix}-message;
    .d(@ns, {
        flex: 1;
        overflow: hidden;
    });

    //element header;
    .d(be(@ns, header), {
        .m(default, {
            .useFlexRCC(20);
            justify-content: space-between;
        });

        .e(title, {
            margin: 0 10px 0 0;
            font-weight: bolder;
            font-size: inherit;

            .filter-overflow();
        });

        .e(icon, {
            border-radius: 5px;
            outline: none;
            color: var(--sss-color-gray-dark);
            padding: 5px;

            &:hover,
            &:focus {
                background-color: var(--sss-color-gray-fade);
            }
        });


    });

    //element body
    .d(be(@ns, body), {
        flex: 1;
        font-size: inherit;
        .e(text, {
            .filter-overflow();

        });
    });

    //element footer
    .d(be(@ns, footer), {
        .m(default, {
            display: flex;
            justify-content: flex-end;
            gap: 5px;
        })
    });

}


//message-draggable-container
& {
    @ns: @{componentPrefix}-message-draggable-container;
    @box: @{componentPrefix}-message-box;


    .d(@ns, {
        position: fixed;
        .d(@box, {
            position: static !important;
        });

        .d(s-message__header, {
            cursor: move;
            user-select: none;
        });
    });


}


//message-container
& {
    @ns: @{componentPrefix}-message-container;
    @types: success, info, warning, danger;

    .d(@ns, {
        position: fixed;
        transition: all .4s ease;

        & * {
            font-size: 12px !important;
            font-weight: normal;
        }
        .s-message-box {
            padding: 5px 10px;
            align-items: center;
            box-shadow: none;

            each(@types, .(@type) {
                .m(@type, {
                    background-color: getClrVar(@type, fade);
                    border-color: getClrVar(@type, lighter);
                })
            })
        }
        .d(be(s-message, header), {
            .useFlexRCC(5);
            .e(title, {
                margin: 0;
            });
            .e(icon, {
                background-color: transparent;
            })
        });

    });
}

//notify-container
& {
    @ns: @{componentPrefix}-notify-container;

    .d(@ns, {
        width: 300px;
        transition: all .4s ease;
        position: fixed;
    });

    .s-message__message__text {
        word-wrap: break-word;
        white-space: break-spaces;
        padding-right: 25px;
    }

}

//confirm-container
& {
    @ns: @{componentPrefix}-confirm-container;
    .d(@ns, {

        //全屏展示
        position: fixed;
        left: 0;
        top: 0;
        right: 0;
        bottom: 0;

        //消息框居中
        display: flex;
        justify-content: center;
        align-items: center;

        //控制大小
        .s-message-box {
            min-width: 280px;
            max-width: 400px;
            position: absolute;
        }

        //修改为flex布局，只是为了增加间隙(
        .s-message {
            display: flex;
            flex-flow: column nowrap;
            gap: 10px;

        }

        //允许换行
        .s-message__body__text {
            word-wrap: break-word;
            white-space: break-spaces;
            padding-right: 25px;
        }
    })
}


.pos-top-right {
    position: fixed;
    top: 0;
    right: 20px;

}

.pos-top-left {
    position: fixed;
    top: 0;
    left: 20px;
}

.pos-bottom-right {
    position: fixed;
    right: 20px;
    bottom: 0;

}

.pos-bottom-left {
    position: fixed;
    left: 20px;
    bottom: 0;

}

.pos-top-center {
    position: fixed;
    top: 0;
    left: 50%;
    transform: translateX(-50%);
}


