@import "../mixn/_index";


.@{componentPrefix}-badge {
    @ns: @{componentPrefix}-badge;
    @types: primary, success, info, warning, danger, cyan;
    @variant: empty, fantasy;

    & {
        --sss-badge-font-color: var(--sss-color-white);
        --sss-badge-bg-color: var(--sss-color-primary);
        --sss-badge-br-color: transparent;
    }


    //base
    & {
        .useBorderRadius(@infinite);
        .useBorderBox();

        position: absolute;
        right: 0;
        top: 0;
        transform: translate(50%, -50%);

        font-size: var(--sss-font-size-small);
        padding: 0 7px;
        border: solid 1px;


        background-color: var(--sss-badge-bg-color);
        border-color: var(--sss-badge-br-color);
        color: var(--sss-badge-font-color);


    }

    //modifier type
    each(@types, .(@type) {
        .m(@type, {
            --sss-badge-bg-color: getClrVar(@type);
        })
    });

    //modifier theme empty
    .m(empty, {
        --sss-badge-bg-color: var(--sss-color-bg);
        --sss-badge-br-color: getClrVar(primary, light);
        --sss-badge-font-color: getClrVar(primary);

        each(@types, .(@type) {
            .with(@ns, {
                .m(@type, {
                    --sss-badge-bg-color: var(--sss-color-bg);
                    --sss-badge-br-color: getClrVar(@type, light);
                    --sss-badge-font-color: getClrVar(@type);
                });
            });
        });

    });


    //modifier theme fantasy
    .m(fantasy, {
        --sss-badge-bg-color: getClrVar(primary, fade);
        --sss-badge-br-color: getClrVar(primary, light);
        --sss-badge-font-color: getClrVar(primary);

        each(@types, .(@type) {
            .with(@ns, {
                .m(@type, {
                    --sss-badge-bg-color: getClrVar(@type, fade);
                    --sss-badge-br-color: getClrVar(@type, light);
                    --sss-badge-font-color: getClrVar(@type);
                });
            });
        });
    });


    //point
    & {
        &:empty {
            padding: 3px;
        }

        each(@types, .(@type) {
            .m(@type, {
                &:empty {
                    --sss-badge-bg-color: getClrVar(@type);
                }
            });

        });
    }


}
